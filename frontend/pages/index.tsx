import type {NextPage} from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Axios from 'axios'
import Button from '@mui/material/Button';
import TextField from '@mui/material/TextField';
import {useState} from "react";
import Router from 'next/router'

import  { apiEndpoint } from '../config'

export interface SwagRequest {
    name: string
    email: string
    address: string
}

async function apiRequest(info: SwagRequest){
    try {
        const response = await Axios.post(`${apiEndpoint}/swag`, JSON.stringify(info), {
            headers: {
                'Content-Type': 'application/json'
            }
        })
        if(response.status == 201){
            await Router.push('/completed')
        }
    }
    catch (e){
        alert('Please fill all fields & try again.')
    }
}

const Home: NextPage = () => {

    const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [address, setAddress] = useState('');
    const [emailError, setEmailError] = useState('')

    const validateEmail = (email: string) => {
        const re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(String(email).toLowerCase());
    }

    const emptyErrors = () => {
        setEmailError('')
    }

    const requestSwag = async () => {
        console.log(apiEndpoint)
        emptyErrors();

        if(!validateEmail(email)){
            setEmailError('Please enter a valid email address');
            return
        }
        else{
            await apiRequest({
                name,
                email,
                address
            })
        }
    }

    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <h1 className={styles.title}>
                Request Swag from <a href="https://www.stackbuilders.com/">Stackbuilders</a>
            </h1>
            <div className={styles.formContainer}>
                <form className={styles.form}>
                    <div className={styles.row}>
                        <div className={styles.column}>
                            <TextField
                                type="text"
                                label="Full Name"
                                className={styles.input}
                                value={name}
                                onChange={(e) => setName(e.target.value)}
                            />
                        </div>
                    </div>
                    <div className={styles.row}>
                        <div className={styles.column}>
                            <TextField
                                type="email"
                                label="Email"
                                className={styles.input}
                                value={email}
                                onChange={(e) => {
                                    setEmailError('');
                                    setEmail(e.target.value)
                                }}
                            />
                        </div>
                    </div>
                    { emailError &&
                        <div className={styles.row}>
                            <div className={styles.column}>
                                <span style={{fontWeight: 'bold', color: 'red', float: 'right'}}>{emailError}</span>
                            </div>
                        </div>
                    }
                    <div className={styles.row}>
                        <div className={styles.column}>
                            <TextField
                                type="text"
                                multiline rows={3}
                                label="Address"
                                className={styles.input}
                                value = {address}
                                onChange={(e)=>{setAddress(e.target.value)}}
                            />
                        </div>
                    </div>
                    <div className={styles.row}>
                        <div className={styles.column}>
                            <Button
                                variant="contained"
                                className={styles.submit}
                                onClick={() => requestSwag()}
                            >Submit</Button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    )
}

export default Home;
